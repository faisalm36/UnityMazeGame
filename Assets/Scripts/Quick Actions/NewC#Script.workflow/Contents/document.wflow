<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>528</string>
	<key>AMApplicationVersion</key>
	<string>2.10</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Run AppleScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>on run {input, parameters}    -- Get target folder: selected folder if any, else front Finder window    tell application "Finder"        if (exists Finder window 1) then            set theTarget to target of Finder window 1        else            display alert "Open a Finder window inside your Unity project's Assets/ folder first."            return input        end if        try            if (selection as list) is not {} then                set sel to item 1 of (selection as list)                if (class of sel is folder) then set theTarget to sel            end if        end try        set targetPath to (POSIX path of (theTarget as alias))    end tell    -- Ask for script name (no .cs); sanitize to a valid C# identifier/class    set dlg to display dialog "C# Script Name (no .cs):" default answer "MyScript"    set rawName to text returned of dlg    set sanitizeCmd to "python3 - &lt;&lt;'PY'\nimport re,sys\ns=sys.stdin.read().strip()\ns=re.sub(r'[^0-9A-Za-z_]', '', s)\nif not s:\n    s='NewScript'\nif s[0].isdigit():\n    s='_' + s\nprint(s)\nPY"    set className to do shell script "printf %s " &amp; quoted form of rawName &amp; " | " &amp; sanitizeCmd    set filePath to targetPath &amp; className &amp; ".cs"    -- Unity MonoBehaviour template with matching class name    set lf to linefeed    set content to "using UnityEngine;" &amp; lf &amp; lf &amp; "public class " &amp; className &amp; " : MonoBehaviour" &amp; lf &amp; "{" &amp; lf &amp; "    // Start is called before the first frame update" &amp; lf &amp; "    void Start()" &amp; lf &amp; "    {" &amp; lf &amp; "        Debug.Log(\"" &amp; className &amp; " is working!\");" &amp; lf &amp; "    }" &amp; lf &amp; lf &amp; "    // Update is called once per frame" &amp; lf &amp; "    void Update()" &amp; lf &amp; "    {" &amp; lf &amp; "    }" &amp; lf &amp; "}" &amp; lf    -- Write file (overwrite if exists)    do shell script "printf %s " &amp; quoted form of content &amp; " &gt; " &amp; quoted form of filePath    -- Reveal the new file in Finder    tell application "Finder"        reveal (POSIX file filePath as alias)        activate    end tell    return inputend run</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>InputUUID</key>
				<string>4AC99C93-A5FD-4E6D-87F4-F682DF5955B7</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
				</array>
				<key>OutputUUID</key>
				<string>9307A4BF-C92A-464D-A4A0-A912179B3541</string>
				<key>UUID</key>
				<string>D62733A3-8AD9-42C7-8A38-59E2F18107B4</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<integer>1</integer>
				<key>location</key>
				<string>309.000000:247.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.workflow</string>
	</dict>
</dict>
</plist>
